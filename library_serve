https://port-0-pj3-server-dc9c2nlt7zv05q.sel5.cloudtype.app/

app.get('/library', async (req, res)=>{
const library =[
  {id : 1, value : 11010 , libName : "종로구" },
  {id : 2, value : 11020, libName : "중구" },
  {id : 3, value : 11030, libName : "용산구" },
  {id : 4, value : 11040, libName : "성동구" },
  {id : 5, value : 11050, libName : "광진구" },
  {id : 6, value : 11060, libName : "동대문구" },
  {id : 7, value : 11070, libName : "중랑구" },
  {id : 8, value : 11080, libName : "성북구" },
  {id : 9, value : 11090, libName : "강북구" },
  {id : 10, value : 11100, libName : "도봉구" },
  {id : 11, value : 11110, libName : "노원구" },
  {id : 12, value : 11120, libName : "은평구" },
  {id : 13, value : 11130, libName : "서대문구" },
  {id : 14, value : 11140, libName : "마포구" },
  {id : 15, value : 11150, libName : "양천구" },
  {id : 16, value : 11160, libName : "강서구" },
  {id : 17, value : 11170, libName : "구로구" },
  {id : 18, value : 11180, libName : "금천구" },
  {id : 19, value : 11190, libName : "영등포구" },
  {id : 20, value : 11200, libName : "동작구" },
  {id : 21, value : 11210, libName : "관악구" },
  {id : 22, value : 11220, libName : "서초구" },
  {id : 23, value : 11230, libName : "강남구" },
  {id : 24, value : 11240, libName : "송파구" },
  {id : 25, value : 11250, libName : "강동구" },
];

  try{
    const {keyword} = req.query
    console.log("작동중 Library", keyword)
    // console.log("작동중 req", req)
    for(let i = 0; 0 < library.length; i++){
      if(keyword ==library[i].libName){
        const selectedCode = library[i].value;

        const libraryApi = new URL('https://data4library.kr/api/loanItemSrchByLib?');
        libraryApi.searchParams.set("authKey", '43d7efdc5d7f99a3be907ecac62d3212026fb810e793f19e56fb0b5a390c93f8')
        libraryApi.searchParams.set("dtl_region", selectedCode);
        libraryApi.searchParams.set("startDt", '2023-01-01');
        libraryApi.searchParams.set("endDt",'2023-12-31' )
        libraryApi.searchParams.set("pageSize", "10");
        libraryApi.searchParams.set("format", 'json');

        const options= {
          method : "GET",
          headers : {
            "Content-Type" : "application/json",
          }
        };

        const response = await fetch(libraryApi.toString(), options);

        if(!response.ok){
          // throw new Error(`Library Fetch failed at SearchForm ${response.status}`);
          throw (`Library Fetch failed at SearchForm`);
        }

        const data = await response.json();

        if(!data){
          res.json("데이터가 없습니다.")
        }

        const jsonData = data.response.docs;
        // const stringifiedData = JSON.stringify(jsonData);
        // sessionStorage.setItem(`${keyword}`, stringifiedData )


        res.json(jsonData);
      }
      // else{
      //   console.log("검색할 수 없는 서울시 입니다.")
      // };
    };

  }
  catch(error){
    console.error("에러가 발생했습니다.", error.message)
  }

})
